[{"content":"Test\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52  /** * @file 1069.go * @author kadrick (kbk2581553@gmail.com) * @brief math * @version 0.1 * @date 2022-04-06 11:11 * * @copyright Copyright (c) 2021 * */ package main import ( \u0026#34;fmt\u0026#34; \u0026#34;math\u0026#34; ) func min(a, b float64) float64 { if a \u0026lt; b { return a } return b } func main() { var x, y, d, t float64 fmt.Scan(\u0026amp;x, \u0026amp;y, \u0026amp;d, \u0026amp;t) dist, ans := math.Sqrt(x*x+y*y), 0.0 // case1: just walk \tans = dist jump := math.Floor(dist / d) left := dist - jump*d // case2: jump + walk \tans = min(ans, jump*t+left) // case3: jump + 1 \tif jump \u0026gt; 0 { ans = min(ans, (jump+1)*t) } // case4: 2jumps \tif jump == 0 { ans = min(ans, 2*t) } // case5: overjump + walk \tans = min(ans, (jump+1)*t+d-left) fmt.Println(ans) return }   ","date":"2022-04-10T12:53:11+09:00","permalink":"https://kadrick.github.io/Blog/p/testpost/","title":"TestPost"}]